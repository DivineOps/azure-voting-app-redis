trigger:
- master

resources:
- repo: self

variables:
  system.debug: true
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2f607f0b-9bc5-43c0-b522-772c20cd72de'
  imageRepository: 'zenithworksazurevotingappredis'
  containerRegistry: 'raireg1.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'raireg11795044f-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool: 'igniteDemoPool'
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool: 'igniteDemoPool'
    environment: 'zenithworksazurevotingappredis-1182.ignitedemo1'
    strategy:
      canary:
        increments: [25]
        preDeploy:
          steps:
          - task: Delay@1
              inputs:
                delayForMinutes: '2'
        deploy:
          steps:
          - task: Delay@1
              inputs:
                delayForMinutes: '2'
          
        postRouteTraffic:
          pool: server
          steps:
          - task: Delay@1
              inputs:
                delayForMinutes: '2'
            - bash:
                echo Run ACA task
        on:
          failure:
            steps:
            - task: Delay@1
              inputs:
                delayForMinutes: '2'
          success:
            steps:
            - task: Delay@1
              inputs:
                delayForMinutes: '2'
